// –¢—Ä–µ–±–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç UserProfile, —è–∫–∏–π:
// –æ—Ç—Ä–∏–º—É—î –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —á–µ—Ä–µ–∑ props (—ñ–º‚Äô—è, email, –≤—ñ–∫, –∞–≤–∞—Ç–∞—Ä);
// –º–∞—î –ª–æ–∫–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω (isFollowing –∞–±–æ followers);
// –¥–æ–∑–≤–æ–ª—è—î –≤–∑–∞—î–º–æ–¥—ñ—è—Ç–∏ –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É:
// –ù–∞–ø—Ä–∏–∫–ª–∞–¥, ‚ÄúFollow / Unfollow‚Äù –∞–±–æ ‚Äú‚ù§Ô∏è Like‚Äù.

import { useState } from 'react';

type UserProfileProps = {
  name: string;
  email: string;
  age: number;
  avatar: string;
  initialFollowers?: number;
};

export default function UserProfile({
  name,
  email,
  age,
  avatar,
  initialFollowers = 100,
}: UserProfileProps) {
  const [isFollowing, setFollowing] = useState(false);
  const [followers, setFollowers] = useState(initialFollowers);

  const handleFollowing = () => {
    setFollowing(prev => !prev);
    setFollowers(prev => (isFollowing ? prev - 1 : prev + 1));
  };

  return (
    <div
      style={{
        border: '1px solid #ccc',
        borderRadius: '10px',
        padding: '16px',
        maxWidth: '280px',
        textAlign: 'center',
        boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)',
        margin: '20px auto',
      }}
    >
      <img
        src={avatar}
        alt={name}
        style={{ width: '100px', borderRadius: '50%' }}
      />
      <h2>{name}</h2>
      <p>{email}</p>
      <p>–í—ñ–∫: {age}</p>
      <button
        onClick={handleFollowing}
        style={{
          padding: '8px 16px',
          marginTop: '10px',
          backgroundColor: isFollowing ? '#ff6666' : '#4CAF50',
          color: 'white',
          border: 'none',
          borderRadius: '8px',
          cursor: 'pointer',
        }}
      >
        {isFollowing ? 'Unfollow' : 'Follow'}
      </button>
      <p style={{ marginTop: '8px', color: '#555' }}>
        üë• –ü—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤: {followers}
      </p>
      <p style={{ color: isFollowing ? 'green' : 'gray' }}>
        {isFollowing ? '–í–∏ –ø—ñ–¥–ø–∏—Å–∞–Ω—ñ ‚úÖ' : '–í–∏ –Ω–µ –ø—ñ–¥–ø–∏—Å–∞–Ω—ñ ‚ùå'}
      </p>
    </div>
  );
}
